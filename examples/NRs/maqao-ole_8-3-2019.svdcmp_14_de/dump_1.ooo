instruction;	nb_fe;	type;	inputs;	outputs;	latency;	P0,P1,P2,P3,P4,P5,P6,P7;	special;	type;	inputs;	outputs;	latency;	P0,P1,P2,P3,P4,P5,P6,P7;	special;	
4206112: MOVUPS	(%R9,%R10,8),%XMM2;	1;	load;	R9,R10;	XMM2;	6;	0, 0, x, x, 0, 0, 0, 0;	;	
4206117: MOVUPS	0x10(%R9,%R10,8),%XMM3;	1;	load;	R9,R10;	XMM3;	6;	0, 0, x, x, 0, 0, 0, 0;	;	
4206123: MOVUPS	0x20(%R9,%R10,8),%XMM4;	1;	load;	R9,R10;	XMM4;	6;	0, 0, x, x, 0, 0, 0, 0;	;	
4206129: MOVUPS	0x30(%R9,%R10,8),%XMM5;	1;	load;	R9,R10;	XMM5;	6;	0, 0, x, x, 0, 0, 0, 0;	;	
4206135: DIVPD	%XMM1,%XMM2;	1;	compute;	XMM1,XMM2;	XMM2;	13;	1, 0, 0, 0, 0, 0, 0, 0;	divider:4;	
4206139: DIVPD	%XMM1,%XMM3;	1;	compute;	XMM1,XMM3;	XMM3;	13;	1, 0, 0, 0, 0, 0, 0, 0;	divider:4;	
4206143: DIVPD	%XMM1,%XMM4;	1;	compute;	XMM1,XMM4;	XMM4;	13;	1, 0, 0, 0, 0, 0, 0, 0;	divider:4;	
4206147: DIVPD	%XMM1,%XMM5;	1;	compute;	XMM1,XMM5;	XMM5;	13;	1, 0, 0, 0, 0, 0, 0, 0;	divider:4;	
4206151: MOVUPS	%XMM2,(%RCX,%R10,8);	1;	store_addr;	RCX,R10;	;	1;	0, 0, x, x, 0, 0, 0, x;	;	store;	XMM2;	;	3;	0, 0, 0, 0, 1, 0, 0, 0;	;	
4206156: MOVUPS	%XMM3,0x10(%RCX,%R10,8);	1;	store_addr;	RCX,R10;	;	1;	0, 0, x, x, 0, 0, 0, x;	;	store;	XMM3;	;	3;	0, 0, 0, 0, 1, 0, 0, 0;	;	
4206162: MOVUPS	%XMM4,0x20(%RCX,%R10,8);	1;	store_addr;	RCX,R10;	;	1;	0, 0, x, x, 0, 0, 0, x;	;	store;	XMM4;	;	3;	0, 0, 0, 0, 1, 0, 0, 0;	;	
4206168: MOVUPS	%XMM5,0x30(%RCX,%R10,8);	1;	store_addr;	RCX,R10;	;	1;	0, 0, x, x, 0, 0, 0, x;	;	store;	XMM5;	;	3;	0, 0, 0, 0, 1, 0, 0, 0;	;	
4206174: ADD	$0x8,%R10;	1;	compute;	R10;	R10,flags;	1;	x, x, 0, 0, 0, x, x, 0;	;	
4206178: CMP	%R12,%R10 : JB	402e20 <codelet_+0x120>;	1;	branch;	R12,R10,flags;	flags;	0;	0, 0, 0, 0, 0, 0, 1, 0;	;	
